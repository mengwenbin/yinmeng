package com.xiaoxu.music.community.activity;

import android.util.Log;
import android.view.KeyEvent;
import android.view.inputmethod.EditorInfo;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.TextView.OnEditorActionListener;

import com.lidroid.xutils.exception.HttpException;
import com.umeng.analytics.AnalyticsConfig;
import com.umeng.analytics.MobclickAgent;
import com.xiaoxu.music.community.BaseNewActivity;
import com.xiaoxu.music.community.R;
import com.xiaoxu.music.community.constant.Constant;
import com.xiaoxu.music.community.entity.MusicListEntity;
import com.xiaoxu.music.community.entity.MusicUserEntity;
import com.xiaoxu.music.community.model.impl.BaseRequestCallBack;
import com.xiaoxu.music.community.model.task.SearchTask;

public class SearchActivity extends BaseNewActivity {
	
	private EditText searchText;
	private String key = "";
	
	private final String mPageName = "SearchActivity";
	
	@Override
	public void setContent() {
		// TODO Auto-generated method stub
		setContentView(R.layout.activity_search);
		// 发送策略定义了用户由统计分析SDK产生的数据发送回友盟服务器的频率。
		MobclickAgent.updateOnlineConfig(this);
		// SDK会对日志进行加密。加密模式可以有效防止网络攻击，提高数据安全性。
		AnalyticsConfig.enableEncrypt(true);
	}

	@Override
	protected void onResume() {
		super.onResume();
		MobclickAgent.onPageStart(mPageName);// 友盟统计
		MobclickAgent.onResume(this);// 友盟统计
	}

	@Override
	protected void onPause() {
		super.onPause();
		MobclickAgent.onPageEnd(mPageName);
		MobclickAgent.onPause(this);
	}

	@Override
	public void setupView() {
		// TODO Auto-generated method stub
		searchText = getEditText(R.id.search_view);
		searchText.setOnEditorActionListener(new OnEditorActionListener() {
			@Override
			public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
				if (actionId == EditorInfo.IME_ACTION_SEARCH) {
					key = v.getText().toString().trim();
					task_music();
					task_user();
					return true;
				}
				return false;
			}
		});
	}

	@Override
	public void setModel() {
		// TODO Auto-generated method stub
	}
	
	public void task_music(){
		SearchTask task_music = new SearchTask(context, Constant.SEARCH_TYPE_MUSIC, key, 1, callback_music);
		task_music.excute();
	}
	
	public void task_user(){
		SearchTask task_user = new SearchTask(context, Constant.SEARCH_TYPE_USER, key, 1, callback_user);
		task_user.excute();
	}
	
	BaseRequestCallBack callback_user = new BaseRequestCallBack(MusicUserEntity.class) {
		
		@Override
		public void onResult(String result, int code, String alert, Object obj) {
			// TODO Auto-generated method stub
		}
		
		@Override
		public void onFailure(HttpException arg0, String arg1) {
			// TODO Auto-generated method stub
		}
		
	};
	
	BaseRequestCallBack callback_music = new BaseRequestCallBack(MusicListEntity.class) {
		
		@Override
		public void onResult(String result, int code, String alert, Object obj) {
			// TODO Auto-generated method stub
		}
		
		@Override
		public void onFailure(HttpException arg0, String arg1) {
			// TODO Auto-generated method stub
		}
		
	};

}
